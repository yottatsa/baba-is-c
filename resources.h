/* graphical resources for baba-is-c
 * code: @yottatsa
 * art:  @nina-kali-nina
 * based on original art for baba is you
 */

#include "binliteral.h"
#include "fastconio.h"


#ifdef __C64__
#define GRAPHIC
#define ANIMATION
#endif

#ifdef __SPECTRUM__
#define GRAPHIC
#endif


#define BGCOLOR LIGHTBLUE
#define TEXTCOLOR WHITE

#define	C_BABA		WHITE
#define	C_ROCK		DARKGRAY
#define	C_WALL		BROWN
#define C_FLAG		YELLOW
#define C_WATER		BLUE
#define C_KEY		YELLOW
#define C_DOOR		LIGHTGRAY
#define C_STOP		WHITE
#define C_PUSH		BLACK
#define C_IS		CYAN

#define C_YOU		C_BABA
#define C_WIN		C_FLAG


#define BGCOLOR1	BLUE
#define BGCOLOR2	ORANGE
#define BGCOLOR3	YELLOW

#ifdef __C64__
#define C_BG		BGCOLORMASK0 // LIGHTBLUE	BGCOLOR
#define C_DOORBG	BGCOLORMASK1 // BLLUE
#define C_YOUBG		BGCOLORMASK1 // BLLUE
#define C_WINBG		BGCOLORMASK1 // BLLUE
#define C_WALLBG	BGCOLORMASK2 // ORANGE
#define C_PUSHBG	BGCOLORMASK3 //	YELLOW

#else
#define C_BG		LIGHTBLUE
#define C_DOORBG	BLUE
#define C_YOUBG		BLUE
#define C_WINBG		BLUE
#define C_WALLBG	ORANGE
#define C_PUSHBG	YELLOW

#endif

#define C_STOPBG	C_WALLBG

unsigned char sprites_colors[] = {
	0,		0,		// 0
	C_BABA,		C_BG,		// baba icon
	C_ROCK,		C_BG,		// rock icon
	C_WALL,		C_WALLBG,	// wall icon
	C_FLAG,		C_BG,		// flag icon
	C_WATER, 	C_BG,		// water icon
	C_KEY,		C_BG,		// key icon
	C_DOOR,		C_DOORBG,	// door icon
	
	0,		0,		// 8
	C_BABA,		C_BG,		// baba
	C_ROCK,		C_BG,		// rock
	C_WALL,		C_BG,		// wall
	C_FLAG,		C_BG,		// flag
	C_WATER,	C_BG,		// water
	C_KEY,		C_BG,		// key
	C_DOOR,		C_BG,		// door
	
	C_YOU,		C_YOUBG,	// you
	C_WIN,		C_WINBG,	// win
	C_STOP,		C_STOPBG,	// stop
	C_PUSH,		C_PUSHBG,	// push
	0,		0,		// shut
	0,		0,		// open
	0,		0,		// sink
	0,		0,		// lose
	0,		0,		// hot
	0,		0,		// melt
	0,		0,		// 26
	0,		0,		// 27
	0,		0,		// 28
	0,		0,		// 29
	0,		0,		// has
	C_IS,		C_BG,		// is
};

#ifdef GRAPHIC
unsigned char sprites[256] = {
	// ....
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),

	// baba icon
	BYTE(0001,0100),
	BYTE(0111,1100),
	BYTE(1110,1010),
	BYTE(1111,1110),
	BYTE(1111,1110),
	BYTE(1010,0100),
	BYTE(0000,0000),
	BYTE(0000,0000),

	// rock icon
	BYTE(0000,0000),
	BYTE(0001,1000),
	BYTE(0011,0100),
	BYTE(0111,0010),
	BYTE(0110,1010),
	BYTE(0111,1110),
	BYTE(0011,1100),
	BYTE(0000,0000),

	// wall icon
	BYTE(1111,1111),
	BYTE(1000,1000),
	BYTE(1111,1111),
	BYTE(0010,0010),
	BYTE(1111,1111),
	BYTE(0100,0100),
	BYTE(1111,1111),
	BYTE(0001,0001),

	// flag icon
	BYTE(0000,0000),
	BYTE(0111,1100),
	BYTE(0101,1100),
	BYTE(0111,1100),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0000,0000),

	// water icon
	BYTE(0000,0110),
	BYTE(1111,1001),
	BYTE(0000,0000),
	BYTE(0011,1100),
	BYTE(1100,0111),
	BYTE(0000,0000),
	BYTE(0001,1111),
	BYTE(1110,0000),

	// key icon
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(1100,0000),
	BYTE(1011,1110),
	BYTE(1110,1010),
	BYTE(1100,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),

	// door icon
	BYTE(0111,1100),
	BYTE(1100,0110),
	BYTE(1000,0010),
	BYTE(1000,1010),
	BYTE(1000,0010),
	BYTE(1000,0010),
	BYTE(1111,1110),
	BYTE(0000,0000),

	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	
	// baba
	BYTE(1100,0100),
	BYTE(1110,1110),
	BYTE(1100,1010),
	BYTE(0000,0000),
	BYTE(1100,0100),
	BYTE(1110,1110),
	BYTE(1100,1010),
	BYTE(0000,0000),

	// rock
	BYTE(1100,1110),
	BYTE(1110,1010),
	BYTE(1010,1110),
	BYTE(0000,0000),
	BYTE(0110,1010),
	BYTE(1000,1100),
	BYTE(0110,1010),
	BYTE(0000,0000),

	// wall
	BYTE(1010,0100),
	BYTE(1110,1110),
	BYTE(1110,1010),
	BYTE(0000,0000),
	BYTE(1000,1000),
	BYTE(1000,1000),
	BYTE(1110,1110),
	BYTE(0000,0000),

	// flag
	BYTE(1110,1000),
	BYTE(1100,1000),
	BYTE(1000,1110),
	BYTE(0000,0000),
	BYTE(0100,1100),
	BYTE(1110,1010),
	BYTE(1010,1110),
	BYTE(0000,0000),

	// watr
	BYTE(1010,0100),
	BYTE(1110,1110),
	BYTE(1110,1010),
	BYTE(0000,0000),
	BYTE(1110,1100),
	BYTE(0100,1110),
	BYTE(0100,1010),
	BYTE(0000,0000),

	// key
	BYTE(1010,1110),
	BYTE(1100,1100),
	BYTE(1010,1110),
	BYTE(0000,0000),
	BYTE(1010,0000),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0000,0000),


	// door
	BYTE(1100,1110),
	BYTE(1010,1010),
	BYTE(1100,1110),
	BYTE(0000,0000),
	BYTE(1110,1100),
	BYTE(1010,1110),
	BYTE(1110,1010),
	BYTE(0000,0000),

	// you
	NBYTE(0101,0001),
	NBYTE(0001,0101),
	NBYTE(1011,0001),
	NBYTE(1111,1111),
	NBYTE(1101,0111),
	NBYTE(1101,0111),
	NBYTE(1100,0111),
	NBYTE(1111,1111),

	// win
	NBYTE(0101,0001),
	NBYTE(0001,1011),
	NBYTE(0001,0001),
	NBYTE(1111,1111),
	NBYTE(1100,1111),
	NBYTE(1101,0111),
	NBYTE(1101,0111),
	NBYTE(1111,1111),

	// stop
	NBYTE(1001,0001),
	NBYTE(1011,1011),
	NBYTE(0011,1011),
	NBYTE(1111,1111),
	NBYTE(0001,0001),
	NBYTE(0101,0001),
	NBYTE(0001,0111),
	NBYTE(1111,1111),

	// push
	NBYTE(0001,0101),
	NBYTE(0001,0101),
	NBYTE(0111,0001),
	NBYTE(1111,1111),
	NBYTE(1001,0101),
	NBYTE(1011,0001),
	NBYTE(0011,0101),
	NBYTE(1111,1111),

	// lock/shut
	BYTE(0111,0001),
	BYTE(0111,0101),
	BYTE(0001,0001),
	BYTE(1111,1111),
	BYTE(0001,0101),
	BYTE(0111,0011),
	BYTE(0001,0101),
	BYTE(1111,1111),


	// open
	BYTE(0001,0001),
	BYTE(0101,0001),
	BYTE(0001,0111),
	BYTE(1111,1111),
	BYTE(0001,0011),
	BYTE(0011,0101),
	BYTE(0001,0101),
	BYTE(1111,1111),

	// sink
	BYTE(1001,0001),
	BYTE(1011,1011),
	BYTE(0011,0001),
	BYTE(1111,1111),
	BYTE(0011,0101),
	BYTE(0101,0011),
	BYTE(0101,0101),
	BYTE(1111,1111),

	// lose
	BYTE(0111,0001),
	BYTE(0111,0101),
	BYTE(0001,0001),
	BYTE(1111,1111),
	BYTE(1001,0001),
	BYTE(1011,0011),
	BYTE(0011,0001),
	BYTE(1111,1111),

	// hot
	BYTE(0101,0001),
	BYTE(0001,0101),
	BYTE(0101,0001),
	BYTE(1111,1111),
	BYTE(1100,0111),
	BYTE(1110,1111),
	BYTE(1110,1111),
	BYTE(1111,1111),

	// melt
	BYTE(0001,0001),
	BYTE(0001,0011),
	BYTE(0101,0001),
	BYTE(1111,1111),
	BYTE(0111,0001),
	BYTE(0111,1011),
	BYTE(0001,1011),
	BYTE(1111,1111),



	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),


	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	
	// lava icon
	BYTE(1101,1111),
	BYTE(1001,1101),
	BYTE(1010,1001),
	BYTE(1111,1010),
	BYTE(1011,1111),
	BYTE(0011,1011),
	BYTE(0101,0011),
	BYTE(1111,0101),

	// lava
	BYTE(1000,0100),
	BYTE(1000,1110),
	BYTE(1110,1010),
	BYTE(0000,0000),
	BYTE(1010,0100),
	BYTE(1010,1110),
	BYTE(0110,1010),
	BYTE(0000,0000),


	// has
	BYTE(1010,0100),
	BYTE(1110,1110),
	BYTE(1010,1010),
	BYTE(0000,0000),
	BYTE(0001,1000),
	BYTE(0001,0000),
	BYTE(0011,0000),
	BYTE(0000,0000),

	// is
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(0000,0000),
	BYTE(1110,0110),
	BYTE(0100,0100),
	BYTE(1110,1100),
	BYTE(0000,0000),
	BYTE(0000,0000),


};
#endif

#ifdef ANIMATION

#define FF		255
#define SAME_SPRITE	FF, FF, FF, FF, FF, FF, FF, FF

unsigned char p1[256] = {
	// ....
	SAME_SPRITE,

	// baba icon
	BYTE(0000,0000),
	BYTE(0001,0100),
	BYTE(0111,1100),
	BYTE(1110,1010),
	BYTE(1111,1110),
	BYTE(1111,1110),
	BYTE(1010,0010),
	BYTE(0000,0000),

	// rock icon
	SAME_SPRITE,

	// wall icon
	SAME_SPRITE,

	// flag icon p1
	BYTE(0000,0000),
	BYTE(0111,0000),
	BYTE(0101,1100),
	BYTE(0111,1100),
	BYTE(0100,1100),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0000,0000),

	// water icon
	BYTE(0000,0110),
	BYTE(1111,1001),
	BYTE(0000,0000),
	BYTE(0011,1100),
	BYTE(1100,0111),
	BYTE(0000,0000),
	BYTE(0001,1111),
	BYTE(1110,0000),

	// key icon
	SAME_SPRITE,

	// door icon
	SAME_SPRITE,

	SAME_SPRITE,
	
	// baba
	SAME_SPRITE,

	// rock
	SAME_SPRITE,

	// wall
	SAME_SPRITE,

	// flag
	SAME_SPRITE,

	// watr
	SAME_SPRITE,

	// key
	SAME_SPRITE,


	// door
	SAME_SPRITE,

	// you
	SAME_SPRITE,

	// win
	SAME_SPRITE,

	// stop
	SAME_SPRITE,

	// push
	SAME_SPRITE,

	// lock/shut
	SAME_SPRITE,


	// open
	SAME_SPRITE,

	// sink
	SAME_SPRITE,

	// lose
	SAME_SPRITE,

	// hot
	SAME_SPRITE,

	// melt
	SAME_SPRITE,



	SAME_SPRITE,


	SAME_SPRITE,
	
	// lava icon
	BYTE(1101,1111),
	BYTE(1001,1101),
	BYTE(1010,1001),
	BYTE(1111,1010),
	BYTE(1011,1111),
	BYTE(0011,1011),
	BYTE(0101,0011),
	BYTE(1111,0101),

	// lava
	SAME_SPRITE,


	// has
	SAME_SPRITE,

	// is
	SAME_SPRITE,


};

unsigned char p2[256] = {
	// ....
	SAME_SPRITE,

	// baba icon
	SAME_SPRITE,

	// rock icon
	SAME_SPRITE,

	// wall icon
	SAME_SPRITE,

	// flag icon p2
	BYTE(0000,0000),
	BYTE(0110,0000),
	BYTE(0101,1100),
	BYTE(0111,1100),
	BYTE(0101,1100),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0000,0000),

	// water icon
	BYTE(0000,0110),
	BYTE(1111,1001),
	BYTE(0000,0000),
	BYTE(0011,1100),
	BYTE(1100,0111),
	BYTE(0000,0000),
	BYTE(0001,1111),
	BYTE(1110,0000),

	// key icon
	SAME_SPRITE,

	// door icon
	SAME_SPRITE,

	SAME_SPRITE,
	
	// baba
	SAME_SPRITE,

	// rock
	SAME_SPRITE,

	// wall
	SAME_SPRITE,

	// flag
	SAME_SPRITE,

	// watr
	SAME_SPRITE,

	// key
	SAME_SPRITE,


	// door
	SAME_SPRITE,

	// you
	SAME_SPRITE,

	// win
	SAME_SPRITE,

	// stop
	SAME_SPRITE,

	// push
	SAME_SPRITE,

	// lock/shut
	SAME_SPRITE,


	// open
	SAME_SPRITE,

	// sink
	SAME_SPRITE,

	// lose
	SAME_SPRITE,

	// hot
	SAME_SPRITE,

	// melt
	SAME_SPRITE,



	SAME_SPRITE,


	SAME_SPRITE,
	
	// lava icon
	BYTE(1101,1111),
	BYTE(1001,1101),
	BYTE(1010,1001),
	BYTE(1111,1010),
	BYTE(1011,1111),
	BYTE(0011,1011),
	BYTE(0101,0011),
	BYTE(1111,0101),

	// lava
	SAME_SPRITE,


	// has
	SAME_SPRITE,

	// is
	SAME_SPRITE,


};

unsigned char p3[256] = {
	// ....
	SAME_SPRITE,

	// baba icon
	BYTE(0000,0000),
	BYTE(0001,0100),
	BYTE(0111,1100),
	BYTE(1110,1010),
	BYTE(1111,1110),
	BYTE(1111,1110),
	BYTE(1010,0010),
	BYTE(0000,0000),

	// rock icon
	SAME_SPRITE,

	// wall icon
	SAME_SPRITE,

	// flag icon p3
	BYTE(0000,0000),
	BYTE(0110,0100),
	BYTE(0101,1100),
	BYTE(0111,1100),
	BYTE(0101,0000),
	BYTE(0100,0000),
	BYTE(0100,0000),
	BYTE(0000,0000),

	// water icon
	BYTE(0000,0110),
	BYTE(1111,1001),
	BYTE(0000,0000),
	BYTE(0011,1100),
	BYTE(1100,0111),
	BYTE(0000,0000),
	BYTE(0001,1111),
	BYTE(1110,0000),

	// key icon
	SAME_SPRITE,

	// door icon
	SAME_SPRITE,

	SAME_SPRITE,
	
	// baba
	SAME_SPRITE,

	// rock
	SAME_SPRITE,

	// wall
	SAME_SPRITE,

	// flag
	SAME_SPRITE,

	// watr
	SAME_SPRITE,

	// key
	SAME_SPRITE,


	// door
	SAME_SPRITE,

	// you
	SAME_SPRITE,

	// win
	SAME_SPRITE,

	// stop
	SAME_SPRITE,

	// push
	SAME_SPRITE,

	// lock/shut
	SAME_SPRITE,


	// open
	SAME_SPRITE,

	// sink
	SAME_SPRITE,

	// lose
	SAME_SPRITE,

	// hot
	SAME_SPRITE,

	// melt
	SAME_SPRITE,



	SAME_SPRITE,


	SAME_SPRITE,
	
	// lava icon
	BYTE(1101,1111),
	BYTE(1001,1101),
	BYTE(1010,1001),
	BYTE(1111,1010),
	BYTE(1011,1111),
	BYTE(0011,1011),
	BYTE(0101,0011),
	BYTE(1111,0101),

	// lava
	SAME_SPRITE,


	// has
	SAME_SPRITE,

	// is
	SAME_SPRITE,


};
#endif
